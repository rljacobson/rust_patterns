var searchIndex = new Map(JSON.parse('[["rust_patterns",{"t":"CCCQCGNNNNNNNNFNNNNNNNHHNNNNNCIJJKFOHNNNHNNMHNOMMNNNNIIIFKNNNNNNMNMNMNNMNNNONNNNN","n":["encapsulation","hashing","plugins","registered_item_impl","type_erased_api","Encapsulation","borrow","borrow_mut","from","into","try_from","try_into","type_id","vzip","Xxh3Hasher128","borrow","borrow_mut","default","finish","finish_u128","from","into","one_shot_128","one_shot_64","try_from","try_into","type_id","vzip","write","item_registry","BxRegisteredItem","NEXT_ITEM_INDEX","REGISTERED_ITEMS","RegisteredItem","RegisteredItems","_phantom","add_to_registry","borrow","borrow_mut","from","get_data_plugin_count","get_item","get_item_mut","index","initialize_item_index","into","items","name","new_boxed","try_from","try_into","type_id","vzip","BxIndex","EntityId","HashValue","Index","TypeErasedIndex","borrow","borrow_mut","default","from","get","get_mut","get_with_hash","","get_with_hash_mut","","has_hash","","insert_entity","insert_entity_with_hash","","insert_value","into","lookup","new","try_from","try_into","type_id","vzip"],"q":[[0,"rust_patterns"],[5,"rust_patterns::encapsulation"],[14,"rust_patterns::hashing"],[29,"rust_patterns::plugins"],[30,"rust_patterns::plugins::item_registry"],[53,"rust_patterns::type_erased_api"],[81,"core::result"],[82,"core::any"],[83,"core::hash"],[84,"std::sync::poison::mutex"],[85,"std::sync::lazy_lock"],[86,"core::marker"],[87,"core::sync::atomic"],[88,"alloc::vec"],[89,"alloc::boxed"],[90,"core::default"],[91,"core::cmp"],[92,"core::clone"],[93,"std::collections::hash::set"],[94,"core::option"],[95,"hashbrown::table"]],"i":"``````Dh0000000`j000000``00000``````Al`000`00Bb`11001111`````Bl00000Cl1010110111111111","f":"``````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{bh}{{}c{}}`76{{}j}{{{b{j}}}l}{jn}87{{{b{c}}}nA`}{{{b{c}}}lA`}8765{{{b{dj}}{b{{Ad{Ab}}}}}Af}``{{}Ah}{{}Aj}``{AlAn}{{}B`}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}3{{{b{Al}}}{{b{c}}}Bb}{{{b{dAl}}}{{b{dc}}}Bb}5{{{b{Bd}}}B`}{{}c{}}{AlBf}{{}{{b{Bh}}}}{{}{{Bj{Bb}}}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{bh}{{}c{}}`````=<{{}{{Bl{c}}}{BnA`C`CbCd}}<{{{b{{Bl{c}}}}{b{c}}}{{Cj{{b{{Ch{Cf}}}}}}}{A`C`CbCd}}{{{b{d{Bl{c}}}}{b{c}}}{{Cj{{b{d{Ch{Cf}}}}}}}{A`C`CbCd}}{{{b{Cl}}Cn}{{Cj{{b{{Ch{Cf}}}}}}}}{{{b{{Bl{c}}}}Cn}{{Cj{{b{{Ch{Cf}}}}}}}{A`C`CbCd}}{{{b{dCl}}Cn}{{Cj{{b{d{Ch{Cf}}}}}}}}{{{b{d{Bl{c}}}}Cn}{{Cj{{b{d{Ch{Cf}}}}}}}{A`C`CbCd}}{{{b{Cl}}Cn}D`}{{{b{{Bl{c}}}}Cn}D`{A`C`CbCd}}{{{b{d{Bl{c}}}}{b{c}}Cf}D`{A`C`CbCd}}{{{b{dCl}}CnCf}{{f{D`Af}}}}{{{b{d{Bl{c}}}}CnCf}{{f{D`Af}}}{A`C`CbCd}}{{{b{d{Bl{c}}}}c{Ch{Cf}}}{{Dd{{Db{c{Ch{Cf}}}}}}}{A`C`CbCd}}{{}c{}}{BlDf}{{}{{Bl{c}}}{A`C`CbCd}}{c{{f{e}}}{}{}}{{}{{f{c}}}{}}{bh}{{}c{}}","D":"E`","p":[[1,"reference",null,null,1],[0,"mut"],[6,"Result",81,null,1],[5,"TypeId",82],[5,"Xxh3Hasher128",14],[1,"u64"],[1,"u128"],[10,"Hash",83],[1,"u8"],[1,"slice"],[1,"unit"],[5,"Mutex",84],[5,"LazyLock",85],[5,"RegisteredItems",30],[5,"PhantomData",86],[1,"usize"],[10,"RegisteredItem",30],[5,"AtomicUsize",87],[5,"Vec",88],[1,"str"],[5,"Box",89,null,1],[5,"Index",53],[10,"Default",90],[10,"Eq",91],[10,"Clone",92],[10,"Any",82],[8,"EntityId",53],[5,"HashSet",93],[6,"Option",94,null,1],[10,"TypeErasedIndex",53],[8,"HashValue",53],[1,"bool"],[1,"tuple",null,null,1],[5,"OccupiedEntry",95],[5,"HashTable",95],[6,"Encapsulation",5]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACkADQAGAAIACwAJABcABgAjAAEAJgABADIAAwA3AAEAOwACAEIAAABEAAAARgAAAEkAAABNAAQA","P":[[6,"T"],[9,"U"],[10,"U,T"],[11,"U"],[12,""],[13,"V"],[15,"T"],[17,""],[20,"T"],[21,"U"],[22,"T"],[24,"U,T"],[25,"U"],[26,""],[27,"V"],[28,""],[37,"T"],[40,""],[41,"R"],[43,""],[45,"U"],[46,""],[49,"U,T"],[50,"U"],[51,""],[52,"V"],[58,"T"],[64,""],[65,"T"],[66,""],[67,"T"],[68,""],[69,"T"],[71,""],[72,"T"],[74,"U"],[75,""],[76,"T"],[77,"U,T"],[78,"U"],[79,""],[80,"V"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3811]}